name: 'Terraform'

on:
  push:
    branches:
    - "development"
    paths:
     - 'Infrastructure/**'
  pull_request:

permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        
    env:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      
    steps:        
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3
      with:
        repository: 'RajatAnand14/ProtivitiAzureTerraform'       
        ref: 'development'
        
    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Create Infrastructure
      working-directory: ./Infrastructure
      run: |
        terraform init
        terraform validate
        terraform plan -out "infra.tfplan"
        terraform apply "infra.tfplan"
        export SSH_USER = $(terraform output -raw linuxsrvusername)
        export SSH_KEY = $(terraform output -raw tls_private_key)
        export SSH_HOST = $(terraform output -raw linuxsrvpublicip)
        export SRV_FQDN = $(terraform output -raw linuxsrvfqdn)
    
    - name: SSH Linux Server
      shell: bash
      env:
        SSH_USER: ${SSH_USER }
        SSH_KEY: ${SSH_KEY}
        SSH_HOST: ${SSH_HOST}
        SRV_FQDN: ${SRV_FQDN}
      run: |
        sudo -i
        sudo apt-get update
        sudo apt-get upgrade